*efmc.txt*	For Vim version 7.3	Last change: 2012-06-22


			VIM REFERENCE MANUAL	by Barry Arthur
						and Israel Chauca

Help on using efmc                                                    *efmc*

1. Introduction				|efmc-intro|
2. Configuration			|efmc-language-specification|

==============================================================================
 1. INTRODUCTION                                                  *efmc-intro*

efmc is an |errorformat| compiler for Vim. The syntax for Vim's builtin error
formats is defined in |errorformat| and is difficult to read because of its
terse scanf-like symbols.  efmc aims to solve that problem by providing a DSL
(Domain Specific Langauge) that is a bit more verbose with separate entries
split across multiple lines.

As an example, the following efmc snippet:
>
  file ':' line ':' col ' ' message
  file ':' line ': ' message
  'In file included from ' file ':' line ':' col
  / \+from / file ':' line message
<

generates the corresponding errorformat string:
>
  %f:%l:%c:\ %m,%f:%l:\ %m,In\ file\ included\ from\ %f:%l:%c,\ %\\+from\ %f:%l%m
<
==============================================================================
 2. LANGUAGE SPECIFICATION                       *efmc-language-specification*

Each line in an efmc file specifies a separate match in the resulting
errorformat string. Each line can contain space separated concatenations of
'strings', /regular expressions/ or bare keywords.

The keywords are:

file, line, col, virtcol, type, number, message, rest, pointer, scanf *,
string

It's good to follow Vim's convention on help tags as described in
|help-context|. Something like this: *:ExCommand* , *'option'* ,
*i_CTRL-X_CTRL-K* , etc.

Note: Variables used to modify a plugin behavior are usually surrounded by
quotes as if they were options.

|'efmc-option1'|		Does some magic.
|'efmc-option2'|		Does some dark magic.


------------------------------------------------------------------------------
                                                              *'efmc-option1'*
Values: numeric                                                              ~
Default: 1                                                                   ~

NOTE: Add a trailing tilde "~" at the end of the line to get that
highlighting. With conceal enabled the tilde will be hidden.

Detailed description of what this variable modifies.

------------------------------------------------------------------------------
                                                              *'efmc-option2'*
Values: string                                                               ~
Default: 'abc'                                                               ~

Detailed description of what this variable modifies.

==============================================================================
 3. OTHER                                                         *efmc-other*

A block of indented text can be highlighted by ending the previous line with a
greater than ">" character. The highlighting will end on a line with a less
than character "<" as the first non-blank or any unindented line.

Something like this: >

	if a > b
      echo a
    else
      echo b
    endif
<
Note that the less than and greater than chars will hidden when conceal is
enabled.

The tilde can be used to highlight column headers:

		Header1   Header2   Header3 ~
		---------------------------
        item      entry1    entry2

This items will use the corresponding highlighting group:

	*String	needs an actual tab before and after the '*String'
	*Todo	needs an actual tab before and after the '*Todo'
	*Error	needs an actual tab before and after the '*Error'

There are some special cases that will be also highlighted:
- <Anything>	<= Anything enclosed in <>.
- {Another}		<= Anything enclosed in {}
- CTRL-X		<= CTRL- followed by any char.

 vim:tw=78:ts=8:ft=help:norl:
